{
    "$schema": "UX",
    "$definition": {
        "style_name": "GrGray",
        "style_type": "Alpha Five",
        "resolveAbstractClassNames": true,
        "builderVersionNumber": 1,
        "overrideStyleName": "Default",
        "FontSize": "Medium",
        "hasArguments": true,
        "pageTitle": "Component",
        "serverSideEvents": {
            "onInitialRender": "",
            "onComponentInitialize": "",
            "onComponentExecute": "",
            "systemOnInitialRender": "function systemOnInitialRender as v (e as p)\n\te.html = acds_Gantt_html(e)\nend function \n",
            "systemOnComponentInitialize": "function systemOnComponentInitialize as v (e as p)\nend function \n",
            "systemOnComponentExecute": "function systemOnComponentExecute as v (e as p)\nend function \n\n\n\n\n"
        },
        "XbasicFunctionDeclarations": "\t'************* EXAMPLE FUNCTIONS FOR GETTING LISTS **********************\n\t'>>>>>>>> IMPORTANT: IMPORTANT: The function must be either in an AEX file or in the Code pane of the current web project, \t<<<<<<<<<<<<<<<<\n\t'>>>>>>>> with the option of compiling AEX files checked in the publishing profile for the function to be recognized.\t\t<<<<<<<<<<<<<<<<\n\t'>>>>>>>> Functions defined the the Xbasic functions declarations area of this component will NOT be in scope. \t\t\t\t<<<<<<<<<<<<<<<<\n\t\n\t'function get_lists_for_gantt as c (g as p)\n\t'\t'g contains  g.e = e, g.tmpl = tmpl.gantt\n\t'\tdim return_txt as c\n\t'\t'This function must return a JSON string in proper JSON format. It MUST use the \"key\" and \"label\" properties and since this is JavaScript it\n\t'\t'is case sensitive. \n\t'\t\t'JSON Example of values returned from database:\t'{\"id\" : \"1\", \"Holder\" : \"John Smith\"},{\"id\" : \"2\", \"Holder\" : \"Jim Roders\"},{\"id\" : \"3\", \"Holder\" : \"Sue Devo\"}\n\t'\t\t'Example of above values reformatted for the Gantt to use: return_txt = \",\\\"my_list\\\":[{\\\"key\\\":1, \\\"label\\\": \\\"One\\\"},{\\\"key\\\":2, \\\"label\\\":\\\"two\\\"},{\\\"key\\\":3,\\\"label\\\":\\\"three\\\"}]\"\n\t'\t\t'In the \"return_txt\" example above \"my_list\" is the name of the javascript object that will contain the array of objects that is used by the Gantt API\n\t'\t\t'gantt.serverList() mehtod.\n\t'\t\t' An example of a lightbox config is below. This example links the \"my_list\" javascript object to a control named \"my_custom\" that is mapped to\n\t'\t\t'a user defined column in the table with a value of \"testing\".\n\t'\t\t'The name of the control that will be displayed in the lightbox is set with the gantt.locale.labels.section_options = \"Process Owner\"; line where \"Process Owner\" is what will be displayed.\n\t'\t\n\t'\t'gantt.locale.labels.section_my_custom = \"Process Owner\";\t\n\t'\t'gantt.config.lightbox.sections=[   \n\t'\t'\t{\n\t'\t'\t\tname: \"description\",\n\t'\t'\t\t height: 70,\n\t'\t'\t\t map_to: \"text\",\n\t'\t'\t\t type: \"textarea\",\n\t'\t'\t\t focus: true\n\t'\t'\t},\n\t'\t'\t{\n\t'\t'\t\tname: \"type\",\n\t'\t'\t\t type: \"typeselect\",\n\t'\t'\t\t map_to: \"type\"\n\t'\t'\t},\n\t'\t'\t{\n\t'\t'\t\tname: \"time\",\n\t'\t'\t\t height: 72,\n\t'\t'\t\t type: \"duration\",\n\t'\t'\t\t map_to: \"auto\"\n\t'\t'\t}, \t\n\t'\t'\n\t'\t' \t{\n\t'\t'\t\tname:\"my_custom\",\n\t'\t'\t\t height:23,\n\t'\t'\t\t type:\"select\", \n\t'\t'\t\t options:gantt.serverList(\"my_list\"),\n\t'\t'\t\t map_to:\"testing\"\n\t'\t'\t } \n\t'\t'];\t\t\n\t'\t\n\t'\t'The Example uses a table and a SQL select to get the values for the list\n\t'\tdim conn as sql::Connection\n\t'\tdim args as sql::Arguments\n\t'\tdim rs as sql::ResultSet\n\t'\tdim sql as c\n\t'\tdim xx as c\n\t'\tdim return_txt as c\n\t'\tdim list_name as c = \"my_list\"\n\t'\t\n\t'\tsql = \"select id, Holder from holders\" 'assumes a SQL table both and id and Holder column\n\t'\t'g.tmpl.gantt.connection used below is passed in from the Gantt and is the connection string that was defined for the Gantt.\n\t'\tif a5SQLConnectionOpen(conn,g.tmpl.gantt.connection,session) 'used to provide support for dynamic connectin strings.\n\t'\t\t\tsql_conn.portableSQLEnabled = .t.\n\t'\t\t\tif conn.Execute(sql) then\n\t'\t\t\t\trs = conn.ResultSet\n\t'\t\t\t\tflag = rs.nextrow()\n\t'\t\t\t\tif flag then\n\t'\t\t\t\t\txx = rs.ToJSONObjectSyntax()\n\t'\t\t\t\t\t'xx = rs.ToJSON()\n\t'\t\t\t\t\txx = crlf_to_comma(xx)\n\t'\t\t\t\t\txx = rtrim(xx,\",\")\n\t'\t\t\t\t\t'set up the find and replace parameters to make the json object compliant to the Gantt's API\n\t'\t\t\t\t\tdim findStr as c = <<%str%\n\t'\tid\n\t'\tHolder\n\t'\t%str%\n\t'\t\t\t\t\tdim replaceStr as c = <<%str%\n\t'\tkey\n\t'\tlabel\n\t'\t%str%\n\t'\t\t\t\t\txx = strtran_multi(xx,findStr,replaceStr) 'replace the actual table column names with the required \"key\" and \"lable\" values.\n\t'\t\t\t\t\treturn_txt = \"\"+quote(list_name)+\":[ {\\\"key\\\":0, \\\"label\\\":\\\"\\\"},\" +xx+\"]\" 'build the JSON to append to the Gantt's Collections object and add a blank value to the top of the list to allow for \"no selection\"\n\t'\t\t\t\telse\n\t'\t\t\t\t\t'nothing in result set\n\t'\t\t\t\t\treturn_txt = \"\"+quote(list_name)+\":[ {\\\"key\\\":0, \\\"label\\\":\\\"\\\"}]\" 'return empty list to prevent errors.\n\t'\t\t\t\tend if\n\t'\t\t\telse\n\t'\t\t\t\t'error is sql statement\n\t'\t\t\t\treturn_txt = \"\"+quote(list_name)+\":[ {\\\"key\\\":0, \\\"label\\\":\\\"\\\"}]\" 'return empty list.\n\t'\t\t\tend if\n\t'\telse\n\t'\t\t'can't open connectin \n\t'\t\treturn_txt = \"\"+quote(list_name)+\":[ {\\\"key\\\":0, \\\"label\\\":\\\"\\\"}]\" 'return empty list.\n\t'\tend if\t\t\n\t'\t\n\t'\tget_lists_for_gantt = return_txt\n\t'\n\t'end function\n\n\t'This next example uses a static list\n\n\t'function get_lists_for_gantt as c (g as p)\n\t'\t'using a static list -- Note the \"key\" can be string or numeric and is what is stored in the tasks table column that it has been assinged to. \"label\" is what is displayed to the user.\n\t'\tget_lists_for_gantt = \"\\\"options\\\":[{\\\"key\\\":\\\"Key One\\\", \\\"label\\\": \\\"One\\\"},{\\\"key\\\":\\\"Key Two\\\", \\\"label\\\":\\\"two\\\"},{\\\"key\\\":3,\\\"label\\\":\\\"three\\\"}]\"\t\n\t'\t\n\t'\t'you can also create the JSON as a formated string as this is easier to write.\n\t'\tget_lists_for_gantt = <<%js%\n\t'\t\"options\":[\n\t'\t{\"key\":\"\",\"label\":\"None\"}, \n\t'\t{\"key\":\"one\",\"label\":\"User One\"},\n\t'\t{\"key\":\"two\",\"label\":\"User Two\"},\n\t'\t{\"key\":\"three\",\"label\":\"User Three\"},\n\t'\t{\"key\":4,\"label\":\"User Four\"}\n\t'\t] \n\t'\t%js%\n\t'end function\n\t'******************** EXAMPLE FUNCTIONS FOR LISTS ABOVE **********************************\n\n",
        "activeLanguage": "<Default>",
        "fontScalingOption": "All",
        "info": {
            "dateLastEdited": "2017-5-22"
        },
        "builderType": "CustomComponent",
        "subtype": "ACDS Gantt",
        "guid": "f40fd06a-5cba-41ee-a64e-ad611da5eb2e",
        "componentName": "CK_gantt",
        "componentFilename": "C:\\Dropbox\\Projects\\Projects.WebProjects\\Default.WebProject\\CK_gantt.a5wcmp",
        "builder": {
            "workingPreviewEnabled": false,
            "previewEnabled": false
        },
        "flagOKToPreviewBeforeUserEdits": false,
        "mustRunInIFrame": true,
        "IframeInlineStyle": "height: 768px; width: 100%;  border-style: solid; border-width: 1px; border-color: #000000;",
        "gantt": {
            "connection": "::Name::Access_gantt",
            "task_table": "tasks",
            "link_table": "links",
            "task_sequence": "",
            "link_sequence": "",
            "grid_width": "350",
            "skin": "dhtmlxGantt_meadow.css",
            "task_date": "%m/%d/%Y",
            "date_grid": "%m/%d/%Y",
            "time_step": "15",
            "details_on_create": "true",
            "light_bx_dt_picker": "\"%m\",\"%d\",\"%Y\" ",
            "light_bx_tm_picker": "%H:%i",
            "data_page": "acds_gantt_data.a5w",
            "initial_scroll": "true",
            "quick_info": "false",
            "tool_tip": "false",
            "pre_init_stuff": "gantt.config.show_errors = true;\ngantt.config.grid_resize = true; \ngantt.config.static_background = true;\ngantt.config.auto_scheduling = true;\ngantt.config.auto_scheduling_descendant_links = false; //true;\n//gantt.config.auto_scheduling_move_projects = false; //true by default\n//gantt.config.auto_scheduling_initial = false;\n//gantt.config.auto_scheduling_strict = true;\n\n//gantt.config.highlight_critical_path = true;\n//gantt.config.grid_resize = true;\n//gantt.config.auto_scheduling_move_projects = true;\n//gantt.config.branch_loading = true;\n\ngantt.templates.leftside_text = function(start, end, task){\n \tif(task.type != gantt.config.types.milestone){ \n\t return \"<b>\"+Math.round(task.progress*100)+ \"%</b>\";\n\t} \n\treturn \"\";\n};",
            "post_init_stuff": "",
            "style": "",
            "above_gantt_html": "<script type=\"text/javascript\" src=\"V4_dhtmlxGantt/codebase/ext/dhtmlxgantt_auto_scheduling.js\"> </script>\n<script type=\"text/javascript\" src=\"V4_dhtmlxGantt/codebase/ext/dhtmlxgantt_smart_rendering.js\"> </script>\n<script type=\"text/javascript\" src=\"V4_dhtmlxGantt/codebase/ext/dhtmlxgantt_undo.js\"> </script>\n\n<script>\n<!--\nfunction exportToPDF(){\ngantt.exportToPDF(\n{header:'<style type=\"text/css\">.meeting_task{\tborder:2px solid #BFC518;\tcolor:#6ba8e3;\tbackground: #F2F67E;}.meeting_task .gantt_task_progress{\tbackground:#D9DF29;}.custom_task{\tborder: 2px solid #ff6666;\tcolor:#ff0000;\tbackground:#f5fff5;}.custom_task .gantt_task_progress{\tbackground:#ff6600;}</style>',\nskin:'meadow'}\n)}\n-->\n</script>\n\n<div id=\"scale\" style=\"position:relative; padding:5px;   \">\n<script charset=\"utf-8\" type=\"text/javascript\" src=\"http://export.dhtmlx.com/gantt/api.js\"></script>\n<input type=\"button\" style=\"margin:20px;\" onclick=\"acdsGanttRefresh()\" value=\"Refresh Gantt\">\n<input type=\"button\" style=\"margin:20px;\" onclick=\"gantt.showDate(new Date());\" value=\"Go to Today\"> \n<input type=\"button\" style=\"margin:20px;\" onclick=\"exportToPDF()\" value=\"Export to PDF\">\n<input type=\"button\" style=\"margin:20px;\" onclick=\"gantt.exportToPNG()\" value=\"Export to PNG\">\n<input type=\"button\" style=\"margin:20px;\" onclick='gantt.exportToPNG({ skin:\"meadow\" })' value=\"Export :: Meadow\">\n<input type=\"button\" style=\"margin:20px;\" onclick='gantt.exportToPDF({ skin:\"broadway\" })' value=\"Export :: Broadway\">\n<input type=\"button\" style=\"margin:20px;\" onclick='gantt.exportToPDF({ skin:\"skyblue\" })' value=\"Export :: Skyblue\">\n</div>\n<div style=\"text-align:center;\">\n<input value=\"Undo\" onclick=\"gantt.undo()\" style=\"margin:20px;\" type=\"button\">\n<input value=\"Redo\" onclick=\"gantt.redo()\" style=\"margin:20px;\" type=\"button\">\n</div>",
            "below_gantt_html": "",
            "js_path": "V4_dhtmlxGantt/codebase/dhtmlxgantt.js",
            "css_path": "V4_dhtmlxGantt/codebase/skins",
            "tool_tip_path": "ACDS_dhtmlxGantt/codebase/ext/dhtmlxgantt_tooltip.js",
            "quick_info_path": "ACDS_dhtmlxGantt/codebase/ext/dhtmlxgantt_quick_info.js",
            "start_on_monday": "true",
            "gantt_width": "100%",
            "gantt_height": "750px",
            "task_map": {
                "id": "id",
                "text": "text",
                "start_date": "start_date",
                "end_date": "",
                "duration": "duration",
                "progress": "progress",
                "sortorder": "sortorder",
                "vparent": "parent",
                "vopen": "open",
                "vtype": "type",
                "userdefined1_c": "testing",
                "userdefined2_c": "udf_time",
                "userdefined3_c": "color",
                "userdefined4_c": "textColor",
                "userdefined5_c": "progressColor"
            },
            "link_map": {
                "id": "id",
                "source": "source",
                "target": "target",
                "type": "type"
            },
            "use_end_date": false,
            "xssfix": true,
            "order_branch": false,
            "sort": false,
            "server_utc": false,
            "readonly": false,
            "default_open": false,
            "gantt_select_function": "",
            "ACDS_verison": "1.04"
        },
        "arguments": [
            {
                "Name": "gantt_start_date",
                "DataType": "Character",
                "Source": "RUNTIMEBINDING",
                "VariableScope": "",
                "VariableName": "",
                "DefaultValue": ""
            },
            {
                "Name": "gantt_end_date",
                "DataType": "Character",
                "Source": "RUNTIMEBINDING",
                "VariableScope": "",
                "VariableName": "",
                "DefaultValue": ""
            },
            {
                "Name": "locale",
                "DataType": "Character",
                "Source": "RUNTIMEBINDING",
                "VariableScope": "",
                "VariableName": "",
                "DefaultValue": "V4_dhtmlxGantt/codebase/locale/locale.js"
            },
            {
                "Name": "SQL_Filter",
                "DataType": "Character",
                "Source": "RUNTIMEBINDING",
                "VariableScope": "",
                "VariableName": "",
                "DefaultValue": ""
            }
        ],
        "masterTemplate": "",
        "saveFileType": "Formatted JSON",
        "SVGLinkedFiles": "",
        "localsvg": "",
        "selected": "",
        "designPaneIndex": 1,
        "masterPaneC": "TabbedUIProps",
        "serverSideEventIndex": 1,
        "clientSideEventIndex": 1,
        "clientSideEventIndexC": "1",
        "__WPhostName": "Internet Explorer",
        "embeddedMode": false,
        "_style_versionNumber": 2,
        "_style_hasSassOverrides": false,
        "_style_hasCSSTweaks": false,
        "_style_hassubthemeTweaks": false,
        "repeatingSectionsAreDirty": true,
        "toolBox_value": "",
        "addinBuildNumber": "4881",
        "addinBuildNumberHighestUsed": "4881",
        "alphaFiveBuildNumber": "12",
        "openedFromTemplate": false,
        "builtWithVersionNumer": 1,
        "securityEnabled": false,
        "showHideIsUsed": false,
        "systemXbasicFunctionDeclarations": "'define xbasic functions that the component uses when it is executing\n",
        "componentType": "CustomComponent",
        "version": 1,
        "A5SaveTimeStamp": "20170522081549866",
        "Livepreview_permissions": ""
    }
}